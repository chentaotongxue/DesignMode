修饰符
1、在我们开发过程中可能会遇到某些类中的方法或变量无法使用，例如加了/** {@hide} */注释的，就是一些隐藏的方法。如果我们用反
射就可以轻松调用了。


2、虽然如此但反射也有缺点：

＊ 因为是动态执行的，效率自然没有预编译时引用现有的库效率高，就像平时我们Win32开发时，可以不用h文件，直接通过GetProcAddress
一样去动态获取方法的地址。当然效率要根据复杂程度而决定，一般稍微复杂的处理性能损失可能超过20%，对于一些复杂的涉及Java自动类型转
换判断，执行时间可能是直接引用的上千倍，所以最终我们调试时必须考虑性能问题。

＊ 因为反射是动态的，所以需要处理很多异常，不然Dalvik崩溃出Force Close的概率会大很多，很简单的一个反射就需要至少3个异常捕获，
本身try-catch效率就不是很高，自然进一步影响运行效率，对于Android开发我们必须考虑这些问题。

＊ 反射因为导致代码臃肿，自然稍微复杂的几个方法实用反射将会导致代码可读性和维护性降低，如果很抽象的调用Android开发强烈不推荐这种
方法。

更详细，参考 https://blog.csdn.net/briblue/article/details/74616922#method-获取